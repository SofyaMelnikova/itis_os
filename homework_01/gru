#! /usr/bin/python3

import os
import sys
import random

minion_count = int(sys.argv[1])

if minion_count <= 0:
    print("N must be > 0")
    sys.exit(1)

gru_pid = os.getpid()

child_pids = []

for _ in range(minion_count):
    child_pid = os.fork()

    if child_pid == 0:
        sleep_time = random.randint(5, 10)
        os.execve('./minion', ['./minion', str(sleep_time)], os.environ)
    else:
        child_pids.append(child_pid)
        print(f"Gru[{gru_pid}]: process created. PID {child_pid}.", flush=True)

while child_pids:
    try:
        pid, status = os.wait()
    except ChildProcessError:
        break

    exit_status = os.WEXITSTATUS(status)

    print(f"Gru[{gru_pid}]: process terminated. PID {pid}. Exit status {exit_status}.", flush=True)

    if exit_status != 0:
        new_child_pid = os.fork()

        if new_child_pid == 0:
            sleep_time = random.randint(5, 10)
            os.execve('./minion', ['./minion', str(sleep_time)], os.environ)
        else:
            child_pids.append(new_child_pid)
            print(f"Gru[{gru_pid}]: process created. PID {new_child_pid}.", flush=True)
    else:
        child_pids.remove(pid)

print("All child processes terminated successfully.", flush=True)
os._exit(0)
